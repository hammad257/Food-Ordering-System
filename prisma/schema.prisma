generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String?  @unique
  phone     String?  @unique
  password  String
  role      Role     @default(USER)
  carts     Cart[]
  orders    Order[]
  tokens    Json? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  RefreshToken RefreshToken[]

  @@index([email])
  @@index([phone])
  @@index([role])
}

model RefreshToken {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  tokenHash String // hash of the random part
  expiresAt DateTime
  revoked   Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([expiresAt])
}

model Product {
  id          String    @id @default(uuid())
  name        String
  description String?
  imageUrl    String?
  variants    Variant[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([name])
  @@index([createdAt])
}

model Variant {
  id        String  @id @default(uuid())
  name      String
  price     Float
  productId String
  product   Product @relation(fields: [productId], references: [id])

  CartItem CartItem[]

  OrderItem OrderItem[]

  @@index([productId])
  @@index([price])
}

model Cart {
  id        String     @id @default(uuid())
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
  total     Float      @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([userId])
  @@index([createdAt])
}

model CartItem {
  id        String  @id @default(uuid())
  cartId    String
  variantId String
  quantity  Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  variant   Variant @relation(fields: [variantId], references: [id])

  @@index([cartId])
  @@index([variantId])
  @@index([cartId, variantId])
}

model Order {
  id          String      @id @default(uuid())
  orderNumber String      @unique
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  items       OrderItem[]
  total       Float
  paymentType String
  status      String      @default("pending")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([userId])
  @@index([status])
  @@index([createdAt])
  @@index([userId, status])
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  variantId String
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  variant   Variant @relation(fields: [variantId], references: [id])

  @@index([orderId])
  @@index([variantId])
  @@index([orderId, variantId])
}

enum Role {
  USER
  ADMIN
}
